--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=5 LPM_WIDTH=3 data eq
--VERSION_BEGIN 16.0 cbx_cycloneii 2016:04:27:18:05:34:SJ cbx_lpm_add_sub 2016:04:27:18:05:34:SJ cbx_lpm_compare 2016:04:27:18:05:34:SJ cbx_lpm_decode 2016:04:27:18:05:34:SJ cbx_mgl 2016:04:27:18:06:48:SJ cbx_nadder 2016:04:27:18:05:34:SJ cbx_stratix 2016:04:27:18:05:34:SJ cbx_stratixii 2016:04:27:18:05:34:SJ  VERSION_END


-- Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus Prime License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 8 
SUBDESIGN decode_h8a
( 
	data[2..0]	:	input;
	eq[4..0]	:	output;
) 
VARIABLE 
	data_wire[2..0]	: WIRE;
	eq_node[4..0]	: WIRE;
	eq_wire[7..0]	: WIRE;
	w_anode196w[3..0]	: WIRE;
	w_anode214w[3..0]	: WIRE;
	w_anode225w[3..0]	: WIRE;
	w_anode236w[3..0]	: WIRE;
	w_anode247w[3..0]	: WIRE;
	w_anode258w[3..0]	: WIRE;
	w_anode269w[3..0]	: WIRE;
	w_anode280w[3..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[4..0] = eq_wire[4..0];
	eq_wire[] = ( w_anode280w[3..3], w_anode269w[3..3], w_anode258w[3..3], w_anode247w[3..3], w_anode236w[3..3], w_anode225w[3..3], w_anode214w[3..3], w_anode196w[3..3]);
	w_anode196w[] = ( (w_anode196w[2..2] & (! data_wire[2..2])), (w_anode196w[1..1] & (! data_wire[1..1])), (w_anode196w[0..0] & (! data_wire[0..0])), B"1");
	w_anode214w[] = ( (w_anode214w[2..2] & (! data_wire[2..2])), (w_anode214w[1..1] & (! data_wire[1..1])), (w_anode214w[0..0] & data_wire[0..0]), B"1");
	w_anode225w[] = ( (w_anode225w[2..2] & (! data_wire[2..2])), (w_anode225w[1..1] & data_wire[1..1]), (w_anode225w[0..0] & (! data_wire[0..0])), B"1");
	w_anode236w[] = ( (w_anode236w[2..2] & (! data_wire[2..2])), (w_anode236w[1..1] & data_wire[1..1]), (w_anode236w[0..0] & data_wire[0..0]), B"1");
	w_anode247w[] = ( (w_anode247w[2..2] & data_wire[2..2]), (w_anode247w[1..1] & (! data_wire[1..1])), (w_anode247w[0..0] & (! data_wire[0..0])), B"1");
	w_anode258w[] = ( (w_anode258w[2..2] & data_wire[2..2]), (w_anode258w[1..1] & (! data_wire[1..1])), (w_anode258w[0..0] & data_wire[0..0]), B"1");
	w_anode269w[] = ( (w_anode269w[2..2] & data_wire[2..2]), (w_anode269w[1..1] & data_wire[1..1]), (w_anode269w[0..0] & (! data_wire[0..0])), B"1");
	w_anode280w[] = ( (w_anode280w[2..2] & data_wire[2..2]), (w_anode280w[1..1] & data_wire[1..1]), (w_anode280w[0..0] & data_wire[0..0]), B"1");
END;
--VALID FILE
